{"version":3,"file":"bundle.js","sources":["../node_modules/smart-table-core/node_modules/smart-table-operators/index.js","../node_modules/smart-table-core/node_modules/smart-table-json-pointer/index.js","../node_modules/smart-table-core/node_modules/smart-table-sort/index.js","../node_modules/smart-table-core/node_modules/smart-table-filter/index.js","../node_modules/smart-table-core/node_modules/smart-table-search/index.js","../node_modules/smart-table-core/src/slice.js","../node_modules/smart-table-core/node_modules/smart-table-events/index.js","../node_modules/smart-table-core/src/events.js","../node_modules/smart-table-core/src/directives/table.js","../node_modules/smart-table-core/src/table.js","../node_modules/smart-table-operators/index.js","../index.js","index.js"],"sourcesContent":["export function swap (f) {\n  return (a, b) => f(b, a);\n}\n\nexport function compose (first, ...fns) {\n  return (...args) => fns.reduce((previous, current) => current(previous), first(...args));\n}\n\nexport function curry (fn, arityLeft) {\n  const arity = arityLeft || fn.length;\n  return (...args) => {\n    if (arity === args.length) {\n      return fn(...args);\n    } else {\n      const func = (...moreArgs) => fn(...args, ...moreArgs);\n      return curry(func, arity - args.length);\n    }\n  };\n}\n\nexport function apply (fn) {\n  return (...args) => fn(...args);\n}\n\nexport function tap (fn) {\n  return arg => {\n    fn(arg);\n    return arg;\n  }\n}","export default function pointer (path) {\n\n  const parts = path.split('.');\n\n  function partial (obj = {}, parts = []) {\n    const p = parts.shift();\n    const current = obj[p];\n    return (current === undefined || parts.length === 0) ?\n      current : partial(current, parts);\n  }\n\n  function set (target, newTree) {\n    let current = target;\n    const [leaf, ...intermediate] = parts.reverse();\n    for (let key of intermediate.reverse()) {\n      if (current[key] === undefined) {\n        current[key] = {};\n        current = current[key];\n      }\n    }\n    current[leaf] = Object.assign(current[leaf] || {}, newTree);\n    return target;\n  }\n\n  return {\n    get(target){\n      return partial(target, [...parts])\n    },\n    set\n  }\n};\n","import {swap} from 'smart-table-operators';\nimport pointer from 'smart-table-json-pointer';\n\n\nfunction sortByProperty (prop) {\n  const propGetter = pointer(prop).get;\n  return (a, b) => {\n    const aVal = propGetter(a);\n    const bVal = propGetter(b);\n\n    if (aVal === bVal) {\n      return 0;\n    }\n\n    if (bVal === undefined) {\n      return -1;\n    }\n\n    if (aVal === undefined) {\n      return 1;\n    }\n\n    return aVal < bVal ? -1 : 1;\n  }\n}\n\nexport default function sortFactory ({pointer, direction} = {}) {\n  if (!pointer || direction === 'none') {\n    return array => [...array];\n  }\n\n  const orderFunc = sortByProperty(pointer);\n  const compareFunc = direction === 'desc' ? swap(orderFunc) : orderFunc;\n\n  return (array) => [...array].sort(compareFunc);\n}","import {compose} from 'smart-table-operators';\nimport pointer from 'smart-table-json-pointer';\n\nfunction typeExpression (type) {\n  switch (type) {\n    case 'boolean':\n      return Boolean;\n    case 'number':\n      return Number;\n    case 'date':\n      return (val) => new Date(val);\n    default:\n      return compose(String, (val) => val.toLowerCase());\n  }\n}\n\nconst operators = {\n  includes(value){\n    return (input) => input.includes(value);\n  },\n  is(value){\n    return (input) => Object.is(value, input);\n  },\n  isNot(value){\n    return (input) => !Object.is(value, input);\n  },\n  lt(value){\n    return (input) => input < value;\n  },\n  gt(value){\n    return (input) => input > value;\n  },\n  lte(value){\n    return (input) => input <= value;\n  },\n  gte(value){\n    return (input) => input >= value;\n  },\n  equals(value){\n    return (input) => value == input;\n  },\n  notEquals(value){\n    return (input) => value != input;\n  }\n};\n\nconst every = fns => (...args) => fns.every(fn => fn(...args));\n\nexport function predicate ({value = '', operator = 'includes', type = 'string'}) {\n  const typeIt = typeExpression(type);\n  const operateOnTyped = compose(typeIt, operators[operator]);\n  const predicateFunc = operateOnTyped(value);\n  return compose(typeIt, predicateFunc);\n}\n\n//avoid useless filter lookup (improve perf)\nfunction normalizeClauses (conf) {\n  const output = {};\n  const validPath = Object.keys(conf).filter(path => Array.isArray(conf[path]));\n  validPath.forEach(path => {\n    const validClauses = conf[path].filter(c => c.value !== '');\n    if (validClauses.length) {\n      output[path] = validClauses;\n    }\n  });\n  return output;\n}\n\nexport default function filter (filter) {\n  const normalizedClauses = normalizeClauses(filter);\n  const funcList = Object.keys(normalizedClauses).map(path => {\n    const getter = pointer(path).get;\n    const clauses = normalizedClauses[path].map(predicate);\n    return compose(getter, every(clauses));\n  });\n  const filterPredicate = every(funcList);\n\n  return (array) => array.filter(filterPredicate);\n}","import pointer from 'smart-table-json-pointer';\n\nexport default function (searchConf = {}) {\n  const {value, scope = []} = searchConf;\n  const searchPointers = scope.map(field => pointer(field).get);\n  if (!scope.length || !value) {\n    return array => array;\n  } else {\n    return array => array.filter(item => searchPointers.some(p => String(p(item)).includes(String(value))))\n  }\n}","export default function sliceFactory ({page = 1, size} = {}) {\n  return function sliceFunction (array = []) {\n    const actualSize = size || array.length;\n    const offset = (page - 1) * actualSize;\n    return array.slice(offset, offset + actualSize);\n  };\n}\n","export function emitter () {\n\n  const listenersLists = {};\n\n  return {\n    on(event, ...listeners){\n      listenersLists[event] = (listenersLists[event] || []).concat(listeners);\n      return this;\n    },\n    dispatch(event, ...args){\n      const listeners = listenersLists[event] || [];\n      for (let listener of listeners) {\n        listener(...args);\n      }\n      return this;\n    },\n    off(event, ...listeners){\n      if (!event) {\n        Object.keys(listenersLists).forEach(ev => this.off(ev));\n      } else {\n        const list = listenersLists[event] || [];\n        listenersLists[event] = listeners.length ? list.filter(listener => !listeners.includes(listener)) : [];\n      }\n      return this;\n    }\n  }\n}\n\nexport function proxyListener (eventMap) {\n  return function ({emitter}) {\n\n    const proxy = {};\n    let eventListeners = {};\n\n    for (let ev of Object.keys(eventMap)) {\n      const method = eventMap[ev];\n      eventListeners[ev] = [];\n      proxy[method] = function (...listeners) {\n        eventListeners[ev] = eventListeners[ev].concat(listeners);\n        emitter.on(ev, ...listeners);\n        return this;\n      };\n    }\n\n    return Object.assign(proxy, {\n      off(ev){\n        if (!ev) {\n          Object.keys(eventListeners).forEach(eventName => this.off(eventName));\n        }\n\n        if (eventListeners[ev]) {\n          emitter.off(ev, ...eventListeners[ev]);\n        }\n\n        return this;\n      }\n    });\n  }\n}","export const TOGGLE_SORT = 'TOGGLE_SORT';\nexport const DISPLAY_CHANGED = 'DISPLAY_CHANGED';\nexport const PAGE_CHANGED = 'CHANGE_PAGE';\nexport const EXEC_CHANGED = 'EXEC_STARTED';\nexport const FILTER_CHANGED = 'FILTER_CHANGED';\nexport const SUMMARY_CHANGED = 'SUMMARY_CHANGED';\nexport const SEARCH_CHANGED = 'SEARCH_CHANGED';\nexport const EXEC_ERROR = 'EXEC_ERROR';","import slice from '../slice';\nimport {curry, tap, compose} from 'smart-table-operators';\nimport pointer from 'smart-table-json-pointer';\nimport {emitter} from 'smart-table-events';\nimport sliceFactory from '../slice';\nimport {\n  SUMMARY_CHANGED,\n  TOGGLE_SORT,\n  DISPLAY_CHANGED,\n  PAGE_CHANGED,\n  EXEC_CHANGED,\n  FILTER_CHANGED,\n  SEARCH_CHANGED,\n  EXEC_ERROR\n} from '../events';\n\nfunction curriedPointer (path) {\n  const {get, set} = pointer(path);\n  return {get, set: curry(set)};\n}\n\nexport default function ({\n  sortFactory,\n  tableState,\n  data,\n  filterFactory,\n  searchFactory\n}) {\n  const table = emitter();\n  const sortPointer = curriedPointer('sort');\n  const slicePointer = curriedPointer('slice');\n  const filterPointer = curriedPointer('filter');\n  const searchPointer = curriedPointer('search');\n\n  const safeAssign = curry((base, extension) => Object.assign({}, base, extension));\n  const dispatch = curry(table.dispatch.bind(table), 2);\n\n  const createSummary = (filtered) => {\n    dispatch(SUMMARY_CHANGED, {\n      page: tableState.slice.page,\n      size: tableState.slice.size,\n      filteredCount: filtered.length\n    });\n  };\n\n  const exec = ({processingDelay = 20} = {}) => {\n    table.dispatch(EXEC_CHANGED, {working: true});\n    setTimeout(function () {\n      try {\n        const filterFunc = filterFactory(filterPointer.get(tableState));\n        const searchFunc = searchFactory(searchPointer.get(tableState));\n        const sortFunc = sortFactory(sortPointer.get(tableState));\n        const sliceFunc = sliceFactory(slicePointer.get(tableState));\n        const execFunc = compose(filterFunc, searchFunc, tap(createSummary), sortFunc, sliceFunc);\n        const displayed = execFunc(data);\n        table.dispatch(DISPLAY_CHANGED, displayed.map(d => {\n          return {index: data.indexOf(d), value: d};\n        }));\n      } catch (e) {\n        table.dispatch(EXEC_ERROR, e);\n      } finally {\n        table.dispatch(EXEC_CHANGED, {working: false});\n      }\n    }, processingDelay);\n  };\n\n  const updateTableState = curry((pter, ev, newPartialState) => compose(\n    safeAssign(pter.get(tableState)),\n    tap(dispatch(ev)),\n    pter.set(tableState)\n  )(newPartialState));\n\n  const resetToFirstPage = () => updateTableState(slicePointer, PAGE_CHANGED, {page: 1});\n\n  const tableOperation = (pter, ev) => compose(\n    updateTableState(pter, ev),\n    resetToFirstPage,\n    () => table.exec() // we wrap within a function so table.exec can be overwritten (when using with a server for example)\n  );\n\n  const api = {\n    sort: tableOperation(sortPointer, TOGGLE_SORT),\n    filter: tableOperation(filterPointer, FILTER_CHANGED),\n    search: tableOperation(searchPointer, SEARCH_CHANGED),\n    slice: compose(updateTableState(slicePointer, PAGE_CHANGED), () => table.exec()),\n    exec,\n    eval(state = tableState){\n      return Promise.resolve()\n        .then(function () {\n          const sortFunc = sortFactory(sortPointer.get(state));\n          const searchFunc = searchFactory(searchPointer.get(state));\n          const filterFunc = filterFactory(filterPointer.get(state));\n          const sliceFunc = sliceFactory(slicePointer.get(state));\n          const execFunc = compose(filterFunc, searchFunc, sortFunc, sliceFunc);\n          return execFunc(data).map(d => {\n            return {index: data.indexOf(d), value: d}\n          });\n        });\n    },\n    onDisplayChange(fn){\n      table.on(DISPLAY_CHANGED, fn);\n    },\n    getTableState(){\n      return Object.assign({}, tableState)\n    }\n  };\n\n  return Object.assign(table, api);\n}","import sort from 'smart-table-sort';\nimport filter from 'smart-table-filter';\nimport search from 'smart-table-search';\nimport table from './directives/table';\n\nexport default function ({\n  sortFactory = sort,\n  filterFactory = filter,\n  searchFactory = search,\n  tableState = {sort: {}, slice: {page: 1}, filter: {}, search: {}},\n  data = []\n}, ...tableDirectives) {\n\n  const coreTable = table({sortFactory, filterFactory, tableState, data, searchFactory});\n\n  return tableDirectives.reduce((accumulator, newdir) => {\n    return Object.assign(accumulator, newdir({\n      sortFactory,\n      filterFactory,\n      searchFactory,\n      tableState,\n      data,\n      table: coreTable\n    }));\n  }, coreTable);\n}","export function swap (f) {\n  return (a, b) => f(b, a);\n}\n\nexport function compose (first, ...fns) {\n  return (...args) => fns.reduce((previous, current) => current(previous), first(...args));\n}\n\nexport function curry (fn, arityLeft) {\n  const arity = arityLeft || fn.length;\n  return (...args) => {\n    if (arity === args.length) {\n      return fn(...args);\n    } else {\n      const func = (...moreArgs) => fn(...args, ...moreArgs);\n      return curry(func, arity - args.length);\n    }\n  };\n}\n\nexport function apply (fn) {\n  return (...args) => fn(...args);\n}\n\nexport function tap (fn) {\n  return arg => {\n    fn(arg);\n    return arg;\n  }\n}","import {curry} from 'smart-table-operators';\n\nconst doNTimes = curry(function (fn, count = 1) {\n  for (let i = 0; i < count; i++) {\n    fn();\n  }\n}, 2);\n\nfunction containerWrapper ({element}) {\n  return {\n    append(...args){\n      for (let item of args) {\n        element.appendChild(item);\n      }\n    },\n    prepend(...args){\n      for (let item of args) {\n        element.insertBefore(item, element.firstChild);\n      }\n    },\n    dropBegin: doNTimes(() => {\n      const firstChild = element.firstChild;\n      if (firstChild) {\n        firstChild.remove();\n      }\n    }),\n    dropEnd: doNTimes(() => {\n      const lastChild = element.lastChild;\n      if (lastChild) {\n        lastChild.remove();\n      }\n    }),\n    empty(){\n      element.innerHTML = '';\n    }\n  };\n}\n\nfunction bufferFactory () {\n  const bufferArray = [];\n  return new Proxy(bufferArray, {\n    get: function (target, property) {\n      if (property === 'pop') {\n        return doNTimes(() => {\n          const item = bufferArray.pop();\n          if (item) {\n            item.row.clean();\n          }\n        });\n      } else if (property === 'shift') {\n        return doNTimes(() => {\n          const item = bufferArray.shift();\n          if (item) {\n            item.row.clean();\n          }\n        });\n      } else {\n        return target[property];\n      }\n    }\n  });\n}\n\n\nexport default function ({container, table, rowFactory, windowSize = 50, bufferSize = 500}) {\n\n  let summary = null;\n  let tableState = null;\n\n  const buffer = bufferFactory();\n  const cont = containerWrapper({element: container});\n\n  const createRowObject = (item) => Object.assign({}, item, {row: rowFactory(item)});\n\n  let windowPointer;\n\n  table.on('SUMMARY_CHANGED', s => summary = s);\n\n  table.onDisplayChange((items) => {\n    tableState = table.getTableState();\n\n    buffer.pop(buffer.length);\n    cont.empty();\n\n    const newItems = items.map(createRowObject);\n    buffer.push(...newItems);\n\n    windowPointer = buffer[0];\n\n\n    for (let i = 0; i < windowSize; i++) {\n      const item = buffer[i];\n      if (item) {\n        container.append(item.row.dom());\n      }\n    }\n\n    const toLoadOnEachSide = Math.floor((bufferSize - items.length) / 2);\n    const {page:currentPage, size:currentSize}  = tableState.slice;\n    const pagesBefore = Math.min(currentPage - 1, Math.ceil(toLoadOnEachSide / currentSize));\n    const pagesAfter = Math.min(Math.ceil((summary.filteredCount - currentSize * currentPage) / currentSize), Math.ceil(toLoadOnEachSide / currentSize));\n\n\n    const foo1 = [];\n    const foo2 = [];\n    for (let cursor = 1; cursor <= pagesBefore; cursor++) {\n      foo1.push(table.exec(Object.assign({}, tableState, {page: currentPage - cursor, size: currentSize})));\n    }\n\n    for (let cursor = 1; cursor <= pagesAfter; cursor++) {\n      foo2.push(table.exec(Object.assign({}, tableState, {page: currentPage + cursor, size: currentSize})));\n    }\n\n    Promise\n      .all(foo1)\n      .then(function (...pages) {\n        const flat = pages.reduce((accumulator, current) => accumulator.concat(current), []);\n\n      });\n\n    Promise.all(foo2)\n      .then(function (...pages) {\n\n      });\n\n  });\n\n\n}","import table from 'smart-table-core';\nimport virtualizer from '../index';\n\nfunction rowFactory (item) {\n  const {index, value} = item;\n  const li = document.createElement('LI');\n  li.innerHTML = `id: ${value.id}`;\n  return {\n    dom(){\n      return li;\n    },\n    clean(){\n    }\n  }\n}\n\nconst data = [];\n\nfor (let i = 1; i <= 10000; i++) {\n  data.push({id: i});\n}\n\nconst t = table({\n  data,\n  tableState: {sort: {}, filter: {}, slice: {page: 1, size: 30}}\n});\n\nconst container = document.getElementById('container');\n\nvirtualizer({table:t, rowFactory});\n\n\nt.exec();"],"names":["pointer","filter","sortFactory","sort","search","table","curry"],"mappings":"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"}